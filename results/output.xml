<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.1 (Python 3.13.3 on win32)" generated="2025-06-20T14:10:54.554084" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="C:\Users\osthe\RobotAPIProject\tests">
<suite id="s1-s1" name="Users Tests" source="C:\Users\osthe\RobotAPIProject\tests\users_tests.robot">
<kw name="Conectar a API ReqRes" owner="users_keywords" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-20T14:10:54.844364" level="INFO">Creating Session using : alias=reqres, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<arg>reqres</arg>
<arg>https://reqres.in</arg>
<arg>verify=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-20T14:10:54.844209" elapsed="0.000419"/>
</kw>
<doc>Cria uma sessão com a URL base da API.</doc>
<status status="PASS" start="2025-06-20T14:10:54.843903" elapsed="0.000785"/>
</kw>
<test id="s1-s1-t1" name="Listar usuarios com sucesso e validar o primeiro email" line="7">
<kw name="Listar usuarios da pagina 2" owner="users_keywords">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-06-20T14:10:55.231880" level="INFO">GET Request : url=https://reqres.in/api/users?page=2 
 path_url=/api/users?page=2 
 headers={'User-Agent': 'python-requests/2.32.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-06-20T14:10:55.232014" level="INFO">GET Response : url=https://reqres.in/api/users?page=2 
 status=200, reason=OK 
 headers={'Date': 'Fri, 20 Jun 2025 17:09:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Content-Encoding': 'gzip', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750436288&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=RplJQjxW4xloXWL8dv7x2bcJdpLDMc2a2jRXwJ1B%2B0s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1750436288&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=RplJQjxW4xloXWL8dv7x2bcJdpLDMc2a2jRXwJ1B%2B0s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Ratelimit-Policy': '100;w=60', 'Ratelimit-Limit': '100', 'Ratelimit-Remaining': '98', 'Ratelimit-Reset': '60', 'Etag': 'W/"440-ZjsmMKR8P3usr2uJZbOCGCxC3Uw"', 'Via': '1.1 vegur', 'Cache-Control': 'max-age=14400', 'Cf-Cache-Status': 'HIT', 'Age': '3110', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'Cf-Ray': '952ce0818dc3498c-MIA', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=115178&amp;min_rtt=114980&amp;rtt_var=43515&amp;sent=5&amp;recv=5&amp;lost=0&amp;retrans=0&amp;sent_bytes=2833&amp;recv_bytes=775&amp;delivery_rate=35000&amp;cwnd=253&amp;unsent_bytes=0&amp;cid=bc1380d78403e1cd&amp;ts=148&amp;x=0"'} 
 body={"page":2,"per_page":6,"total":12,"total_pages":2,"data":[{"id":7,"email":"michael.lawson@reqres.in","first_name":"Michael","last_name":"Lawson","avatar":"https://reqres.in/img/faces/7-image.jpg"},{"id":8,"email":"lindsay.ferguson@reqres.in","first_name":"Lindsay","last_name":"Ferguson","avatar":"https://reqres.in/img/faces/8-image.jpg"},{"id":9,"email":"tobias.funke@reqres.in","first_name":"Tobias","last_name":"Funke","avatar":"https://reqres.in/img/faces/9-image.jpg"},{"id":10,"email":"byron.fields@reqres.in","first_name":"Byron","last_name":"Fields","avatar":"https://reqres.in/img/faces/10-image.jpg"},{"id":11,"email":"george.edwards@reqres.in","first_name":"George","last_name":"Edwards","avatar":"https://reqres.in/img/faces/11-image.jpg"},{"id":12,"email":"rachel.howell@reqres.in","first_name":"Rachel","last_name":"Howell","avatar":"https://reqres.in/img/faces/12-image.jpg"}],"support":{"url":"https://contentcaddy.io?utm_source=reqres&amp;utm_medium=json&amp;utm_campaign=referral","text":"Tired of writing endless social media content? Let Content Caddy generate it for you."}} 
 </msg>
<msg time="2025-06-20T14:10:55.232132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>reqres</arg>
<arg>url=/api/users?page=2</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-20T14:10:54.845223" elapsed="0.386925"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-20T14:10:55.232205" elapsed="0.000043"/>
</return>
<msg time="2025-06-20T14:10:55.232349" level="INFO">${resposta_da_api} = &lt;Response [200]&gt;</msg>
<var>${resposta_da_api}</var>
<doc>Faz uma requisição GET para o endpoint de usuários.</doc>
<status status="PASS" start="2025-06-20T14:10:54.845095" elapsed="0.387268"/>
</kw>
<kw name="A resposta da API deve ser bem sucedida" owner="users_keywords">
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-06-20T14:10:55.232799" elapsed="0.000126"/>
</kw>
<kw name="Dictionary Should Contain Item" owner="Collections">
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
<arg>application/json; charset=utf-8</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" start="2025-06-20T14:10:55.232977" elapsed="0.000281"/>
</kw>
<arg>${resposta_da_api}</arg>
<doc>Verifica se o status da resposta é 200 e se o Content-Type é JSON.</doc>
<status status="PASS" start="2025-06-20T14:10:55.232614" elapsed="0.000680"/>
</kw>
<kw name="O email do primeiro usuario deve ser &quot;michael.lawson@reqres.in&quot;" owner="users_keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-20T14:10:55.233861" level="INFO">${email} = michael.lawson@reqres.in</msg>
<var>${email}</var>
<arg>${response.json()['data'][0]['email']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-20T14:10:55.233612" elapsed="0.000264"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${email}</arg>
<arg>michael.lawson@reqres.in</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-20T14:10:55.233930" elapsed="0.000083"/>
</kw>
<arg>${resposta_da_api}</arg>
<doc>Verifica o email do primeiro usuário acessando a resposta JSON diretamente.</doc>
<status status="PASS" start="2025-06-20T14:10:55.233470" elapsed="0.000571"/>
</kw>
<doc>Faz uma requisição para a lista de usuários e
valida o status e um dado específico na resposta.</doc>
<tag>API</tag>
<tag>GET</tag>
<tag>Smoke</tag>
<tag>Users</tag>
<status status="PASS" start="2025-06-20T14:10:54.844729" elapsed="0.389441"/>
</test>
<doc>Testes para a API de Usuários do ReqRes.</doc>
<status status="PASS" start="2025-06-20T14:10:54.570362" elapsed="0.664282"/>
</suite>
<status status="PASS" start="2025-06-20T14:10:54.555050" elapsed="0.680133"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">API</stat>
<stat pass="1" fail="0" skip="0">GET</stat>
<stat pass="1" fail="0" skip="0">Smoke</stat>
<stat pass="1" fail="0" skip="0">Users</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="1" fail="0" skip="0">Tests</stat>
<stat name="Users Tests" id="s1-s1" pass="1" fail="0" skip="0">Tests.Users Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
